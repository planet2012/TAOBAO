{
  "uid" : "f824b5d3583a06a",
  "name" : "test_login2[data1]",
  "fullName" : "Test_case.test_02_fault_login.TestLogin2#test_login2",
  "historyId" : "534a7bbe28137a8672af482081bc0b8e",
  "time" : {
    "start" : 1658680188170,
    "stop" : 1658680200400,
    "duration" : 12230
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"button[class$=login]\"}\n  (Session info: chrome=103.0.5060.134)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x003D5FD3+2187219]\n\tOrdinal0 [0x0036E6D1+1763025]\n\tOrdinal0 [0x00283E78+802424]\n\tOrdinal0 [0x002B1C10+990224]\n\tOrdinal0 [0x002B1EAB+990891]\n\tOrdinal0 [0x002DEC92+1174674]\n\tOrdinal0 [0x002CCBD4+1100756]\n\tOrdinal0 [0x002DCFC2+1167298]\n\tOrdinal0 [0x002CC9A6+1100198]\n\tOrdinal0 [0x002A6F80+946048]\n\tOrdinal0 [0x002A7E76+949878]\n\tGetHandleVerifier [0x006790C2+2721218]\n\tGetHandleVerifier [0x0066AAF0+2662384]\n\tGetHandleVerifier [0x0046137A+526458]\n\tGetHandleVerifier [0x00460416+522518]\n\tOrdinal0 [0x00374EAB+1789611]\n\tOrdinal0 [0x003797A8+1808296]\n\tOrdinal0 [0x00379895+1808533]\n\tOrdinal0 [0x003826C1+1844929]\n\tBaseThreadInitThunk [0x75426359+25]\n\tRtlGetAppContainerNamedObjectPath [0x77C87A94+228]\n\tRtlGetAppContainerNamedObjectPath [0x77C87A64+180]",
  "statusTrace" : "self = <Test_case.test_02_fault_login.TestLogin2 object at 0x000002189DC72DF0>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"68cc202bb698505e3982515a03af6579\")>\ndata = {'login1': {'assert_element': ['xpath', \"//button[text()='登录']\"], 'assert_value': '登录', 'password': 'cc0128CCHcccccccccccccccccccccccccccccccccccccccccccccccccccccccc', 'time_num': 1, ...}}\n\n    @allure.story('反向向登录流程')\n    # @allure.title('正确账号正确密码')\n    @pytest.mark.parametrize('data', yaml_driver.load_yaml('./Test_data/fault_login.yaml'))\n    def test_login2(self, browser, data):\n        global login_count\n        lp = TaobaoLogin(browser)\n        key_name = list(data.keys())[0]\n        data1 = data[key_name]\n        lp.login()\n>       lp.login_input(data1['username'], data1['password'])\n\nTest_case\\test_02_fault_login.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPage_object\\login_page.py:33: in login_input\n    self.click(*login_element.page_indexlogin_button)\nBase\\base_page.py:34: in click\n    self.locator(name, value).click()\nBase\\base_page.py:20: in locator\n    el = self.driver.find_element(name, value)\n..\\..\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:1244: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n..\\..\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:424: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002189DCA6C10>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77C87A94+228]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77C87A64+180]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"button[class$=login]\"}\nE         (Session info: chrome=103.0.5060.134)\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x003D5FD3+2187219]\nE       \tOrdinal0 [0x0036E6D1+1763025]\nE       \tOrdinal0 [0x00283E78+802424]\nE       \tOrdinal0 [0x002B1C10+990224]\nE       \tOrdinal0 [0x002B1EAB+990891]\nE       \tOrdinal0 [0x002DEC92+1174674]\nE       \tOrdinal0 [0x002CCBD4+1100756]\nE       \tOrdinal0 [0x002DCFC2+1167298]\nE       \tOrdinal0 [0x002CC9A6+1100198]\nE       \tOrdinal0 [0x002A6F80+946048]\nE       \tOrdinal0 [0x002A7E76+949878]\nE       \tGetHandleVerifier [0x006790C2+2721218]\nE       \tGetHandleVerifier [0x0066AAF0+2662384]\nE       \tGetHandleVerifier [0x0046137A+526458]\nE       \tGetHandleVerifier [0x00460416+522518]\nE       \tOrdinal0 [0x00374EAB+1789611]\nE       \tOrdinal0 [0x003797A8+1808296]\nE       \tOrdinal0 [0x00379895+1808533]\nE       \tOrdinal0 [0x003826C1+1844929]\nE       \tBaseThreadInitThunk [0x75426359+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77C87A94+228]\nE       \tRtlGetAppContainerNamedObjectPath [0x77C87A64+180]\n\n..\\..\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: NoSuchElementException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "browser",
    "time" : {
      "start" : 1658680177439,
      "stop" : 1658680188170,
      "duration" : 10731
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"button[class$=login]\"}\n  (Session info: chrome=103.0.5060.134)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x003D5FD3+2187219]\n\tOrdinal0 [0x0036E6D1+1763025]\n\tOrdinal0 [0x00283E78+802424]\n\tOrdinal0 [0x002B1C10+990224]\n\tOrdinal0 [0x002B1EAB+990891]\n\tOrdinal0 [0x002DEC92+1174674]\n\tOrdinal0 [0x002CCBD4+1100756]\n\tOrdinal0 [0x002DCFC2+1167298]\n\tOrdinal0 [0x002CC9A6+1100198]\n\tOrdinal0 [0x002A6F80+946048]\n\tOrdinal0 [0x002A7E76+949878]\n\tGetHandleVerifier [0x006790C2+2721218]\n\tGetHandleVerifier [0x0066AAF0+2662384]\n\tGetHandleVerifier [0x0046137A+526458]\n\tGetHandleVerifier [0x00460416+522518]\n\tOrdinal0 [0x00374EAB+1789611]\n\tOrdinal0 [0x003797A8+1808296]\n\tOrdinal0 [0x00379895+1808533]\n\tOrdinal0 [0x003826C1+1844929]\n\tBaseThreadInitThunk [0x75426359+25]\n\tRtlGetAppContainerNamedObjectPath [0x77C87A94+228]\n\tRtlGetAppContainerNamedObjectPath [0x77C87A64+180]",
    "statusTrace" : "self = <Test_case.test_02_fault_login.TestLogin2 object at 0x000002189DC72DF0>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"68cc202bb698505e3982515a03af6579\")>\ndata = {'login1': {'assert_element': ['xpath', \"//button[text()='登录']\"], 'assert_value': '登录', 'password': 'cc0128CCHcccccccccccccccccccccccccccccccccccccccccccccccccccccccc', 'time_num': 1, ...}}\n\n    @allure.story('反向向登录流程')\n    # @allure.title('正确账号正确密码')\n    @pytest.mark.parametrize('data', yaml_driver.load_yaml('./Test_data/fault_login.yaml'))\n    def test_login2(self, browser, data):\n        global login_count\n        lp = TaobaoLogin(browser)\n        key_name = list(data.keys())[0]\n        data1 = data[key_name]\n        lp.login()\n>       lp.login_input(data1['username'], data1['password'])\n\nTest_case\\test_02_fault_login.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPage_object\\login_page.py:33: in login_input\n    self.click(*login_element.page_indexlogin_button)\nBase\\base_page.py:34: in click\n    self.locator(name, value).click()\nBase\\base_page.py:20: in locator\n    el = self.driver.find_element(name, value)\n..\\..\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:1244: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n..\\..\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:424: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002189DCA6C10>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77C87A94+228]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77C87A64+180]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"button[class$=login]\"}\nE         (Session info: chrome=103.0.5060.134)\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x003D5FD3+2187219]\nE       \tOrdinal0 [0x0036E6D1+1763025]\nE       \tOrdinal0 [0x00283E78+802424]\nE       \tOrdinal0 [0x002B1C10+990224]\nE       \tOrdinal0 [0x002B1EAB+990891]\nE       \tOrdinal0 [0x002DEC92+1174674]\nE       \tOrdinal0 [0x002CCBD4+1100756]\nE       \tOrdinal0 [0x002DCFC2+1167298]\nE       \tOrdinal0 [0x002CC9A6+1100198]\nE       \tOrdinal0 [0x002A6F80+946048]\nE       \tOrdinal0 [0x002A7E76+949878]\nE       \tGetHandleVerifier [0x006790C2+2721218]\nE       \tGetHandleVerifier [0x0066AAF0+2662384]\nE       \tGetHandleVerifier [0x0046137A+526458]\nE       \tGetHandleVerifier [0x00460416+522518]\nE       \tOrdinal0 [0x00374EAB+1789611]\nE       \tOrdinal0 [0x003797A8+1808296]\nE       \tOrdinal0 [0x00379895+1808533]\nE       \tOrdinal0 [0x003826C1+1844929]\nE       \tBaseThreadInitThunk [0x75426359+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77C87A94+228]\nE       \tRtlGetAppContainerNamedObjectPath [0x77C87A64+180]\n\n..\\..\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: NoSuchElementException",
    "steps" : [ {
      "name" : "流程代码路径：D:\\Python\\Study\\TAOBAO\\Page_object\\login_page.py",
      "time" : {
        "start" : 1658680188170,
        "stop" : 1658680188170,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "打开网页",
      "time" : {
        "start" : 1658680188170,
        "stop" : 1658680190090,
        "duration" : 1920
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "流程代码路径",
      "time" : {
        "start" : 1658680190090,
        "stop" : 1658680190090,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "输入账号",
      "time" : {
        "start" : 1658680190090,
        "stop" : 1658680192240,
        "duration" : 2150
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "输入密码",
      "time" : {
        "start" : 1658680192240,
        "stop" : 1658680194386,
        "duration" : 2146
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "点击登录",
      "time" : {
        "start" : 1658680194386,
        "stop" : 1658680200399,
        "duration" : 6013
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"button[class$=login]\"}\n  (Session info: chrome=103.0.5060.134)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x003D5FD3+2187219]\n\tOrdinal0 [0x0036E6D1+1763025]\n\tOrdinal0 [0x00283E78+802424]\n\tOrdinal0 [0x002B1C10+990224]\n\tOrdinal0 [0x002B1EAB+990891]\n\tOrdinal0 [0x002DEC92+1174674]\n\tOrdinal0 [0x002CCBD4+1100756]\n\tOrdinal0 [0x002DCFC2+1167298]\n\tOrdinal0 [0x002CC9A6+1100198]\n\tOrdinal0 [0x002A6F80+946048]\n\tOrdinal0 [0x002A7E76+949878]\n\tGetHandleVerifier [0x006790C2+2721218]\n\tGetHandleVerifier [0x0066AAF0+2662384]\n\tGetHandleVerifier [0x0046137A+526458]\n\tGetHandleVerifier [0x00460416+522518]\n\tOrdinal0 [0x00374EAB+1789611]\n\tOrdinal0 [0x003797A8+1808296]\n\tOrdinal0 [0x00379895+1808533]\n\tOrdinal0 [0x003826C1+1844929]\n\tBaseThreadInitThunk [0x75426359+25]\n\tRtlGetAppContainerNamedObjectPath [0x77C87A94+228]\n\tRtlGetAppContainerNamedObjectPath [0x77C87A64+180]\n\n",
      "statusTrace" : "  File \"D:\\Python\\Study\\TAOBAO\\Page_object\\login_page.py\", line 33, in login_input\n    self.click(*login_element.page_indexlogin_button)\n  File \"D:\\Python\\Study\\TAOBAO\\Base\\base_page.py\", line 34, in click\n    self.locator(name, value).click()\n  File \"D:\\Python\\Study\\TAOBAO\\Base\\base_page.py\", line 20, in locator\n    el = self.driver.find_element(name, value)\n  File \"D:\\Python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 1244, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n  File \"D:\\Python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 424, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\Python\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 247, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0,
      "hasContent" : true,
      "stepsCount" : 0
    }, {
      "name" : "添加失败截图:",
      "time" : {
        "start" : 1658680200505,
        "stop" : 1658680200808,
        "duration" : 303
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "19603aaffd64f8d6",
        "name" : "失败截图",
        "source" : "19603aaffd64f8d6.png",
        "type" : "image/png",
        "size" : 424361
      } ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 1,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1,
    "hasContent" : true,
    "stepsCount" : 7
  },
  "afterStages" : [ {
    "name" : "browser::0",
    "time" : {
      "start" : 1658680200810,
      "stop" : 1658680206065,
      "duration" : 5255
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "反向向登录流程"
  }, {
    "name" : "feature",
    "value" : "淘宝反向登录流程"
  }, {
    "name" : "parentSuite",
    "value" : "Test_case"
  }, {
    "name" : "suite",
    "value" : "test_02_fault_login"
  }, {
    "name" : "subSuite",
    "value" : "TestLogin2"
  }, {
    "name" : "host",
    "value" : "SD-20211122UEVG"
  }, {
    "name" : "thread",
    "value" : "4936-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "Test_case.test_02_fault_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "data",
    "value" : "{'login1': {'username': 13262355765, 'password': 'cc0128CCHcccccccccccccccccccccccccccccccccccccccccccccccccccccccc', 'time_num': 1, 'assert_value': '登录', 'assert_element': ['xpath', \"//button[text()='登录']\"]}}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "f824b5d3583a06a.json",
  "parameterValues" : [ "{'login1': {'username': 13262355765, 'password': 'cc0128CCHcccccccccccccccccccccccccccccccccccccccccccccccccccccccc', 'time_num': 1, 'assert_value': '登录', 'assert_element': ['xpath', \"//button[text()='登录']\"]}}" ]
}